pipeline {
    agent any
    environment {
        SERVICE_NAME = "${params.SERVICE}"
        TERRAFORM_PATH = tool(name: 'terraform-0.12.5', type: 'org.jenkinsci.plugins.terraform.TerraformInstallation')
        PATH = "${TERRAFORM_PATH}:$PATH"
        PRODUCT_NAME = SERVICE_NAME.toLowerCase()
    }

    options {
        ansiColor('xterm')
    }

    stages {
        stage('Initialize'){
            steps {
                dir("${PRODUCT_NAME}") {
                    script {
                        configs = readJSON file: "../build/config.json"
                        config = configs.config."${PRODUCT_NAME}"
                        state_bucket = config.state_bucket
                        environment = config.environment
                        sh "terraform -v"
                        if (fileExists(".terraform/terraform.tfstate")) {
                            sh "rm -rf .terraform/terraform.tfstate"
                        }
                        if (fileExists("status")) {
                            sh "rm -f status"
                        }
                        if (fileExists("main.tf")) {
                            sh "rm -f main.tf"
                        }
                        sh "aws s3 cp s3://${state_bucket}/resource/main.tf ./"
                        sh "chmod +x ../prep_backend.sh"
                        sh "../prep_backend.sh -b ${state_bucket} -a ${PRODUCT_NAME} -s ${environment} >> main.tf"
                        sh "terraform init"
                    }
                }
            }
        }

        stage('ShowState'){
            steps {
                dir("${PRODUCT_NAME}") {
                    script {
                        sh "set +e; terraform state pull"
                    }
                }
            }
        }
    }
}
